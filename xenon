#!/usr/bin/env python3

import argparse
from pathlib import Path
import subprocess
import sys

O0 = True
USE_STACK = False

def fix_path_in_cmd(arg):
    p = Path(arg)
    if p.exists():
        return str(p.resolve())
    else:
        return arg

def get_args():
    argparser = argparse.ArgumentParser(prog="xenon", add_help=False)
    argparser.add_argument("-b", "--build", help="Build the project", action="store_true")
    argparser.add_argument("--profile", help="Run in profiling mode", action="store_true")
    argparser.add_argument("--debug", help="Run the debugging script", action="store_true")
    argparser.add_argument("--help", "-h", action="store_true")
    args, unknown_args = argparser.parse_known_args()
    unknown_args = [fix_path_in_cmd(a) for a in unknown_args]
    return argparser, args, unknown_args

argparser, args, unknown_args = get_args()

THIS_DIR = Path(__file__).resolve().parent
IVERILOG_DIR = THIS_DIR / "iverilog-parser"
EXE_NAME = "xenon-debug" if args.debug else "xenon"

if USE_STACK:
    BUILD_CMD    = ["stack", "build"] + (["--fast"] if O0 else [])
    RUN_CMD      = ["stack", "exec", EXE_NAME]
    PROFILE_ARGS = ["--profile", "--work-dir", ".stack-work-profile"] if args.profile else []
else:
    BUILD_CMD    = ["cabal", "v2-build"]
    RUN_CMD      = ["cabal", "v2-run", EXE_NAME]
    PROFILE_ARGS = []

PROFILE_RUN_ARGS = ["+RTS", "-xc", "-RTS"] if args.profile else []

if args.help:
    subprocess.run(RUN_CMD + ["--", "--help"], cwd=THIS_DIR)
    print(f"{'-' * 80}\nExtra arguments:")
    argparser.print_help()
    sys.exit(0)

if args.build:
    cmd = BUILD_CMD + PROFILE_ARGS
else:
    cmd = RUN_CMD + PROFILE_ARGS
    cmd += ["--", "--iverilog-dir", IVERILOG_DIR]
    cmd += unknown_args
    cmd += PROFILE_RUN_ARGS

# print(" ".join(str(a) for a in cmd))
r = subprocess.run(cmd, cwd=THIS_DIR)
sys.exit(r.returncode)
