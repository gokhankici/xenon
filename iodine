#!/usr/bin/env python3

import argparse
from pathlib import Path
import subprocess
import sys

O0 = True
USE_STACK = False

def get_args():
    argparser = argparse.ArgumentParser(prog="iodine", add_help=False)
    argparser.add_argument("-b", "--build", help="Build the project", action="store_true")
    argparser.add_argument("--profile", help="Run in profiling mode", action="store_true")
    argparser.add_argument("--debug", help="Run the debugging script", action="store_true")
    argparser.add_argument("--help", "-h", action="store_true")
    args, unknown_args = argparser.parse_known_args()
    for i, arg in enumerate(unknown_args):
        p = Path(arg)
        if p.is_file():
            unknown_args[i] = p.resolve()
    return argparser, args, unknown_args

argparser, args, unknown_args = get_args()

THIS_DIR = Path(__file__).resolve().parent
IVERILOG_DIR = THIS_DIR / "iverilog-parser"
EXE_NAME = "iodine-debug" if args.debug else "iodine"

if USE_STACK:
    STACK_BUILD_CMD = ["stack", "build"] + (["--fast"] if O0 else [])
    STACK_RUN_CMD = ["stack", "exec", EXE_NAME]
    STACK_PROFILE_ARGS = ["--profile", "--work-dir", ".stack-work-profile"] if args.profile else []
    STACK_PROFILE_RUN_ARGS = ["+RTS", "-xc", "-RTS"] if args.profile else []
else:
    STACK_BUILD_CMD = ["cabal", "v2-build"] + (["-O0"] if O0 else [])
    STACK_RUN_CMD = ["cabal", "v2-run", EXE_NAME]
    STACK_PROFILE_ARGS = []
    STACK_PROFILE_RUN_ARGS = []

if args.help:
    subprocess.run(STACK_RUN_CMD + ["--", "--help"], cwd=THIS_DIR)
    print(f"{'-' * 80}\nExtra arguments:")
    argparser.print_help()
else:
    if args.build:
        cmd = STACK_BUILD_CMD + STACK_PROFILE_ARGS
    else:
        cmd = STACK_RUN_CMD + STACK_PROFILE_ARGS
        cmd += ["--", "--iverilog-dir", IVERILOG_DIR]
        cmd += unknown_args
        cmd += STACK_PROFILE_RUN_ARGS if USE_STACK else []
    # print(" ".join(str(a) for a in cmd))
    # sys.exit(0)
    r = subprocess.run(cmd, cwd=THIS_DIR)
    sys.exit(r.returncode)
