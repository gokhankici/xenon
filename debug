#!/bin/zsh

cd "${0:A:h}"

ARGS=()
SEEN_DOUBLE_DASH=0

for arg in $@; do
	if [ "${SEEN_DOUBLE_DASH}" -eq 0 ]; then
		case "$arg" in
			--fixed) FIXED="yes" ;;
			--info)  PRINT_FQ_INFO="yes" ;;
			--)      SEEN_DOUBLE_DASH=1;;
			*)       ARGS+=("$arg") ;;
		esac
	else
		ARGS+=("$arg")
	fi
done

# TEST="benchmarks/472-mips-pipelined/472-mips-fragment.v"
# TEST="benchmarks/472-mips-pipelined/mips_pipeline.v"
# TEST="benchmarks/472-mips-pipelined/neg-mux3_test_02.v"
# TEST="benchmarks/472-mips-pipelined/rom32-test-1.v"
# TEST="benchmarks/crypto_cores/sha_core/trunk/rtl/sha256_stub_3.v"
# TEST="benchmarks/crypto_cores/tiny_aes/trunk/rtl/aes_256.v"
# TEST="benchmarks/crypto_cores/tiny_aes/trunk/rtl/test6.v"
# TEST="benchmarks/fpu/verilog/pre_norm.v"
# TEST="benchmarks/fpu/verilog/fpu.v"
# TEST="benchmarks/xcrypto-ref/rtl/coprocessor/mult_test.v"
# TEST="benchmarks/xcrypto-ref/rtl/coprocessor/scarv_cop_palu.v"
# TEST="benchmarks/yarvi/shared/test-01.v"
# TEST="benchmarks/yarvi/shared/yarvi.v"
# TEST="examples/verilog/stall.v"
# TEST="test/verilog/neg/neg-test-5.v"
# TEST="test/verilog/neg/neg-test-2-v0.v"
# TEST="test/verilog/pos/merge-02.v"
# TEST="test/verilog/pos/merge03.v"
# TEST="test/verilog/pos/nb-test-01.v"
# TEST="test/verilog/pos/submodule-02.v"
# TEST="test/verilog/pos/submodule-05.v"
# TEST="test/verilog/pos/tr-submodule-01.v"
# TEST="test/verilog/pos/tr-test-14.v"
# TEST="benchmarks/scarv-cpu/external/xcrypto/rtl/b_lut/b_lut_unrolled.v"
# TEST="benchmarks/scarv-cpu/external/xcrypto/rtl/p_addsub/p_addsub_unrolled.v"
# TEST="test/verilog/neg/neg-submodule-02.v"
TEST="benchmarks/472-mips-pipelined/mem32_test_01.v"

TEST_DIR="${TEST:h}"
TEST_NAME="${TEST:t:r}"
TEST_FILE="${TEST_DIR}/${TEST_NAME}.v"
FQ_FILE="${TEST_FILE:h}/.liquid/.${TEST_NAME}.pl.fq"

print_fq_info() {
	printf "# variables: "
	grep -E '^bind [0-9]+ TL_' "${FQ_FILE}" | wc -l
	printf "# constraints: "
	grep 'constraint id' "${FQ_FILE}" | wc -l
	sed -En 's/^.*constraint id /  /p' "${FQ_FILE}" | sort -h
	printf "# qualifiers: "
	grep 'qualif ' "${FQ_FILE}" | wc -l
}

if [ -z "${FIXED}" ]; then
        TEST_ANNOT="${TEST_DIR}/annot-${TEST_NAME}.json"
else
        TEST_ANNOT="${TEST_DIR}/annot-${TEST_NAME}_fixed.json"
fi
# TEST_ANNOT="${TEST_ANNOT:h}/annot-test6.json"

if [ -n "${PRINT_FQ_INFO}" ]; then
	print_fq_info
	exit 0
fi

./xenon --build $ARGS && \
	./xenon "${TEST_FILE}" "${TEST_ANNOT}" --verbose --print-solution $ARGS
